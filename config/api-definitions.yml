openapi: 3.0.1
info:
  title: Boot-Swag
  description: This is a sample API Server.
  termsOfService: http://guesser.io/terms/
  contact:
    email: apiteam@pivotal.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8081/api
tags:
  - name: bootswag
    description: All good guesses count
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /donut:
    get:
      tags:
        - desert-controller
      summary: Available Donuts
      description: All generated donuts returned.
      operationId: myDonuts
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Donut'
        400:
          description: Invalid status value
          content: {}
    post:
      tags:
        - desert-controller
      summary: Add a new donut
      operationId: addDonut
      requestBody:
        description: Donut object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Donut'
          application/xml:
            schema:
              $ref: '#/components/schemas/Donut'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
  /maincourse:
    get:
      tags:
        - maincourse-controller
      summary: Available maincourse
      description: All generated maincourse returned.
      operationId: myMaincourse
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Maincourse'
        400:
          description: Invalid status value
          content: {}
components:
  schemas:
    Donut:
      type: object
      properties:
        id:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Donut
    Maincourse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Maincourse
